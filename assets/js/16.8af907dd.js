(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{547:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"webpack-如何监听文件变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-如何监听文件变化"}},[s._v("#")]),s._v(" webpack 如何监听文件变化？")]),s._v(" "),a("p",[s._v("文件监听是在发现源码发现变化时，自动重新构建出新的输出文件\nwebpack 开启开启监听模式，有两种方式：")]),s._v(" "),a("ul",[a("li",[s._v("启动 webpack 命令，后面增加 --watch 参数")]),s._v(" "),a("li",[s._v("在配置 webpack.config.js 配置 watch:true")])]),s._v(" "),a("p",[a("strong",[s._v("缺点：")]),s._v(" 每次都需要手动刷新浏览器")]),s._v(" "),a("h4",{attrs:{id:"文件监听原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件监听原理"}},[s._v("#")]),s._v(" 文件监听原理")]),s._v(" "),a("p",[s._v("webpack 轮巡判断文件的最后编辑时间是否发生了变化，某个文件发生了变化，并不会立刻打包，而是先换存起来（其实这里就是一个防抖操作）。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  watch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启watch 之后的配置")]),s._v("\n  watchOption"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ignored"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认为空，不监听的文件夹或文件，支持正则。")]),s._v("\n    aggregateTimeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听发生变化，等待300ms才执行打包，默认就是300ms")]),s._v("\n    poll"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一秒轮巡监听的次数，1s轮巡1000次，也就是1ms轮巡一次，默认就1000。")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"热更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热更新"}},[s._v("#")]),s._v(" 热更新")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/img/webpack-hot-update.png"),alt:"webpack-热更新"}}),s._v(" "),a("ul",[a("li",[s._v("Webpack Compile：将 js 编译成 Bundle")]),s._v(" "),a("li",[s._v("HMR Server：将热更新的文件输出给 HMR Runtime")]),s._v(" "),a("li",[s._v("Bundle Server：开启本地服务器，将打包的后的 bundle 文件放置服务器内存总，供浏览器访问")]),s._v(" "),a("li",[s._v("HMR Runtime：会被注入到浏览器，更新文件的变化。")]),s._v(" "),a("li",[s._v("bundle.js：构建输出的文件")])]),s._v(" "),a("p",[a("strong",[s._v("步骤：")]),s._v("\n有两种情况")]),s._v(" "),a("ul",[a("li",[s._v("启动 webpack\n首先会经过 Webpack Compile 进行编译，将编译后的文件传输给 Bundle Server 开启本地服务，浏览器就可以通过这个服务去访问打包好的 bundle.js")]),s._v(" "),a("li",[s._v("更新文件自动打包更新\n一样的，监听到文件的更新，首先会通过 Webpack compile 进行编译，编译后的文件通过 HMR Server 通知到 HMR Runtime 更新 bundle.js 文件。HMR Server 和 HMR Runtime 之间是相互通信的，采用的协议通信协议是 Web Socket。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);